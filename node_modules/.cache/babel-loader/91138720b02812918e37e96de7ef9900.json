{"ast":null,"code":"import _slicedToArray from\"/home/saurabh/Github/myRepos/Todo-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{createContext,useReducer,useEffect}from'react';import{todoReducer}from'../reducers/todoReducer';export var TodoContext=createContext();var TodoContextProvider=function TodoContextProvider(props){var _useReducer=useReducer(todoReducer,[],function(){var localData=localStorage.getItem('todos');return localData?JSON.parse(localData):[];}),_useReducer2=_slicedToArray(_useReducer,2),todos=_useReducer2[0],dispatch=_useReducer2[1];useEffect(function(){localStorage.setItem('todos',JSON.stringify(todos));// this hook will run whenever there is change in books\n},[todos]);return/*#__PURE__*/React.createElement(TodoContext.Provider,{value:{todos:todos,dispatch:dispatch}},props.children);};export default TodoContextProvider;","map":{"version":3,"sources":["/home/saurabh/Github/myRepos/Todo-react/src/contexts/TodoContext.js"],"names":["React","createContext","useReducer","useEffect","todoReducer","TodoContext","TodoContextProvider","props","localData","localStorage","getItem","JSON","parse","todos","dispatch","setItem","stringify","children"],"mappings":"8JAAA,MAAOA,CAAAA,KAAP,EAAgBC,aAAhB,CAA+BC,UAA/B,CAA2CC,SAA3C,KAA4D,OAA5D,CACA,OAASC,WAAT,KAA4B,yBAA5B,CAEA,MAAO,IAAMC,CAAAA,WAAW,CAAGJ,aAAa,EAAjC,CAEP,GAAMK,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACC,KAAD,CAAW,iBACXL,UAAU,CAACE,WAAD,CAAc,EAAd,CAAkB,UAAM,CAC1D,GAAMI,CAAAA,SAAS,CAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAlB,CACA,MAAOF,CAAAA,SAAS,CAAGG,IAAI,CAACC,KAAL,CAAWJ,SAAX,CAAH,CAA2B,EAA3C,CACD,CAHmC,CADC,4CAC9BK,KAD8B,iBACvBC,QADuB,iBAKrCX,SAAS,CAAC,UAAM,CACdM,YAAY,CAACM,OAAb,CAAqB,OAArB,CAA8BJ,IAAI,CAACK,SAAL,CAAeH,KAAf,CAA9B,EACA;AACD,CAHQ,CAGN,CAACA,KAAD,CAHM,CAAT,CAIA,mBACE,oBAAC,WAAD,CAAa,QAAb,EAAsB,KAAK,CAAE,CAAEA,KAAK,CAALA,KAAF,CAASC,QAAQ,CAARA,QAAT,CAA7B,EACGP,KAAK,CAACU,QADT,CADF,CAKD,CAdD,CAgBA,cAAeX,CAAAA,mBAAf","sourcesContent":["import React, { createContext, useReducer, useEffect } from 'react';\nimport { todoReducer } from '../reducers/todoReducer';\n\nexport const TodoContext = createContext();\n\nconst TodoContextProvider = (props) => {\n  const [todos, dispatch] = useReducer(todoReducer, [], () => {\n    const localData = localStorage.getItem('todos');\n    return localData ? JSON.parse(localData) : [];\n  });\n  useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify(todos));\n    // this hook will run whenever there is change in books\n  }, [todos]);\n  return (\n    <TodoContext.Provider value={{ todos, dispatch }}>\n      {props.children}\n    </TodoContext.Provider>\n  );\n}\n \nexport default TodoContextProvider;"]},"metadata":{},"sourceType":"module"}